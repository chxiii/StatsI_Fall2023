summary(q3_reg_model)
##### (2) #####
q3_scatter <- ggplot(inc.sub, aes(x=presvote, y=voteshare)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: difflog and presvote") +
theme_bw()
q3_scatter
##### (3) #####
q3_cof_vec <- coef(q3_reg_model)
q3_intercept <- q3_cof_vec[1]
q3_slope <- q3_cof_vec[2]
q3_pre_equation <- paste(
"voteshare =", round(q3_intercept, 2), "+", round(q3_slope, 2), "* presvote")
q3_pre_equation
####### Question 4 #######
##### (1) #####
q4_reg_model <- lm(q1_residuals ~ q2_residuals, data=inc.sub)
summary(q4_reg_model)
##### (2) #####
q4_scatter <- ggplot(inc.sub, aes(x=q2_residuals, y=q1_residuals)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: difflog and presvote") +
theme_bw()
q4_scatter
##### (3) #####
q4_cof_vec <- coef(q4_reg_model)
q4_intercept <- q4_cof_vec[1]
q4_slope <- q4_cof_vec[2]
q4_pre_equation <- paste(
"q1_residuals =", round(q4_intercept, 2), "+", round(q4_slope, 2), "* q2_residuals")
q4_pre_equation
####### Question 5 #######
##### (1) #####
q5_reg_model <- lm(voteshare ~ difflog + presvote, data=inc.sub)
summary(q5_reg_model)
##### (2) #####
q5_cof_vec <- coef(q5_reg_model)
q5_intercept <- q5_cof_vec[1]
q5_slope1 <- q5_cof_vec[2]
q5_slope2 <- q5_cof_vec[3]
q5_pre_equation <- paste(
"voteshare =", round(q5_intercept, 2),
"+", round(q5_slope1, 2), "* difflog",
"+", round(q5_slope2, 2), "* presvote")
q5_pre_equation
##### (3) #####
####### Question 3 #######
##### (1) #####
q3_reg_model <- lm(voteshare ~ presvote, data=inc.sub)
summary(q3_reg_model)
q3_scatter <- ggplot(inc.sub, aes(x=presvote, y=voteshare)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: difflog and presvote") +
theme_bw()
q3_scatter
##### (3) #####
q3_cof_vec <- coef(q3_reg_model)
q3_intercept <- q3_cof_vec[1]
q3_slope <- q3_cof_vec[2]
q3_pre_equation <- paste(
"voteshare =", round(q3_intercept, 2), "+", round(q3_slope, 2), "* presvote")
q3_pre_equation
##### (3) #####
q3_cof_vec <- coef(q3_reg_model)
q3_intercept <- q3_cof_vec[1]
q3_slope <- q3_cof_vec[2]
q3_pre_equation <- paste(
"voteshare =", round(q3_intercept, 2), "+", round(q3_slope, 2), "* presvote")
q3_pre_equation
q4_reg_model <- lm(q1_residuals ~ q2_residuals, data=inc.sub)
summary(q4_reg_model)
q3_reg_model <- lm(voteshare ~ presvote, data=inc.sub)
summary(q3_reg_model)
q2_reg_model <- lm(presvote ~ difflog, data=inc.sub)
summary(q2_reg_model)
q1_reg_model <- lm(voteshare ~ difflog, data=inc.sub)
summary(q1_reg_model)
q1_scatter <- ggplot(inc.sub, aes(x=difflog, y=voteshare)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: difflog and voteshare") +
theme_bw()
q1_scatter
q2_scatter <- ggplot(inc.sub, aes(x=difflog, y=presvote)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: presvote and difflog") +
theme_bw()
q2_scatter
q3_scatter <- ggplot(inc.sub, aes(x=presvote, y=voteshare)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: voteshare and presvote") +
theme_bw()
q3_scatter
q4_scatter <- ggplot(inc.sub, aes(x=q2_residuals, y=q1_residuals)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: q1residuals and q2residuals") +
theme_bw()
q4_scatter
q1_scatter <- ggplot(inc.sub, aes(x=difflog, y=voteshare)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: voteshare and difflog") +
theme_bw()
q1_scatter
##### (3) #####
q4_cof_vec <- coef(q4_reg_model)
q4_intercept <- q4_cof_vec[1]
q4_slope <- q4_cof_vec[2]
q4_pre_equation <- paste(
"q1_residuals =", round(q4_intercept, 2), "+", round(q4_slope, 2), "* q2_residuals")
q4_pre_equation
####### Question 5 #######
##### (1) #####
q5_reg_model <- lm(voteshare ~ difflog + presvote, data=inc.sub)
summary(q5_reg_model)
R.version
q5_reg_model <- lm(voteshare ~ difflog + presvote, data=inc.sub)
summary(q5_reg_model)
q5_cof_vec <- coef(q5_reg_model)
q5_intercept <- q5_cof_vec[1]
q5_slope1 <- q5_cof_vec[2]
q5_slope2 <- q5_cof_vec[3]
q5_pre_equation <- paste(
"voteshare =", round(q5_intercept, 2),
"+", round(q5_slope1, 2), "* difflog",
"+", round(q5_slope2, 2), "* presvote")
q5_pre_equation
View(q5_reg_model)
View(q4_scatter)
View(q4_reg_model)
q4_residuals <- q4_reg_model$residuals
q5_residuals <- q5_reg_model$residuals
identical(q4_residuals, q5_residuals)
q4_residuals <- q4_reg_model[2]
q5_residuals <- q5_reg_model[2]
identical(q4_residuals, q5_residuals)
summary(q4_residuals); summary(q5_residuals)
q4_residuals <- q4_reg_model[2]
q5_residuals <- q5_reg_model[2]
str(q4_residuals); str(q5_residuals)
all(q4_residuals == q5_residuals)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("ggplot2"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/incumbents_subset.csv")
####### Question 1 #######
##### (1) #####
q1_reg_model <- lm(voteshare ~ difflog, data=inc.sub)
summary(q1_reg_model)
##### (2) #####
q1_scatter <- ggplot(inc.sub, aes(x=difflog, y=voteshare)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: voteshare and difflog") +
theme_bw()
q1_scatter
##### (3) #####
q1_residuals <- residuals(q1_reg_model)
str(q1_residuals)
summary(q1_residuals)
##### (4) #####
q1_cof_vec <- coef(q1_reg_model)
q1_intercept <- q1_cof_vec[1]
q1_slope <- q1_cof_vec[2]
q1_pre_equation <- paste(
"voteshare =", round(q1_intercept, 2), "+", round(q1_slope, 2), "* difflog")
q1_pre_equation
####### Question 2 #######
##### (1) #####
q2_reg_model <- lm(presvote ~ difflog, data=inc.sub)
summary(q2_reg_model)
##### (2) #####
q2_scatter <- ggplot(inc.sub, aes(x=difflog, y=presvote)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: presvote and difflog") +
theme_bw()
q2_scatter
##### (3) #####
q2_residuals <- residuals(q2_reg_model)
str(q2_residuals)
summary(q2_residuals)
##### (4) #####
q2_cof_vec <- coef(q2_reg_model)
q2_intercept <- q2_cof_vec[1]
q2_slope <- q2_cof_vec[2]
q2_pre_equation <- paste(
"presvote =", round(q2_intercept, 2), "+", round(q2_slope, 2), "* difflog")
q2_pre_equation
####### Question 3 #######
##### (1) #####
q3_reg_model <- lm(voteshare ~ presvote, data=inc.sub)
summary(q3_reg_model)
##### (2) #####
q3_scatter <- ggplot(inc.sub, aes(x=presvote, y=voteshare)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: voteshare and presvote") +
theme_bw()
q3_scatter
##### (3) #####
q3_cof_vec <- coef(q3_reg_model)
q3_intercept <- q3_cof_vec[1]
q3_slope <- q3_cof_vec[2]
q3_pre_equation <- paste(
"voteshare =", round(q3_intercept, 2), "+", round(q3_slope, 2), "* presvote")
q3_pre_equation
####### Question 4 #######
##### (1) #####
q4_reg_model <- lm(q1_residuals ~ q2_residuals, data=inc.sub)
summary(q4_reg_model)
##### (2) #####
q4_scatter <- ggplot(inc.sub, aes(x=q2_residuals, y=q1_residuals)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: q1residuals and q2residuals") +
theme_bw()
q4_scatter
##### (3) #####
q4_cof_vec <- coef(q4_reg_model)
q4_intercept <- q4_cof_vec[1]
q4_slope <- q4_cof_vec[2]
q4_pre_equation <- paste(
"q1_residuals =", round(q4_intercept, 2), "+", round(q4_slope, 2), "* q2_residuals")
q4_pre_equation
####### Question 5 #######
##### (1) #####
q5_reg_model <- lm(voteshare ~ difflog + presvote, data=inc.sub)
summary(q5_reg_model)
##### (2) #####
q5_cof_vec <- coef(q5_reg_model)
q5_intercept <- q5_cof_vec[1]
q5_slope1 <- q5_cof_vec[2]
q5_slope2 <- q5_cof_vec[3]
q5_pre_equation <- paste(
"voteshare =", round(q5_intercept, 2),
"+", round(q5_slope1, 2), "* difflog",
"+", round(q5_slope2, 2), "* presvote")
q5_pre_equation
##### (3) #####
q4_residuals <- q4_reg_model[2]
q5_residuals <- q5_reg_model[2]
str(q4_residuals); str(q5_residuals)
identical(q4_residuals == q5_residuals)
identical(q4_residuals, q5_residuals)
q5_boxplot <- ggplot(q5_data, aes(x=factor(1), y=c(q4_residuals, q5_residuals),
fill=rep(c("q4_residuals", "q5_residuals"))) +
geom_boxplot())
q5_boxplot
q5_data <- data.frame(q4_residuals = q4_residuals,
q5_residuals = q5_residuals)
q5_boxplot <- ggplot(q5_data, aes(x=factor(1), y=c(q4_residuals, q5_residuals),
fill=rep(c("q4_residuals", "q5_residuals"))) +
geom_boxplot())
q5_boxplot
q5_data <- data.frame(
model = rep(c("q4_reg_model", "q5_reg_model"), each = length(q4_residuals)),
residuals = c(q4_residuals, q5_residuals)
)
q5_boxplot <- ggplot(q5_data, aes(x=model, y=residuals, fill=model)) +
geom_boxplot()
q5_boxplot
q5_data <- data.frame(
model = rep(c("q4_reg_model", "q5_reg_model"), each = length(q4_residuals)),
residuals = c(q4_residuals, q5_residuals)
)
q5_data <- data.frame(
model = rep(c("q4_reg_model", "q5_reg_model")),
residuals = c(q4_residuals, q5_residuals)
)
q5_boxplot <- ggplot(q5_data, aes(x=model, y=residuals, fill=model)) +
geom_boxplot()
q5_boxplot
q5_data <- data.frame(
model = rep(c("q4_reg_model", "q5_reg_model"),
each=length(q4_residuals)),
residuals = c(q4_residuals, q5_residuals)
)
q5_boxplot <- ggplot(q5_data, aes(x=model, y=residuals, fill=model)) +
geom_boxplot()
q5_boxplot
q5_data <- data.frame(
model = rep(c("q4_reg_model", "q5_reg_model"),
each=length(q5_residuals)),
residuals = c(q4_residuals, q5_residuals)
)
q5_boxplot <- ggplot(q5_data, aes(x=model, y=residuals, fill=model)) +
geom_boxplot()
q5_boxplot
q5_residuals <- resid(q5_reg_model)
q5_data <- data.frame(
model = rep(c("q4_reg_model", "q5_reg_model"),
each=length(q5_residuals)),
residuals = c(q4_residuals, q5_residuals)
)
q5_boxplot <- ggplot(q5_data, aes(x=model, y=residuals, fill=model)) +
geom_boxplot()
q5_data <- data.frame(
model = rep(c("q4_reg_model", "q5_reg_model"),
each=length(q4_residuals)),
residuals = c(q4_residuals, q5_residuals)
)
q5_boxplot <- ggplot(q5_data, aes(x=model, y=residuals, fill=model)) +
geom_boxplot()
length(q4_residuals)
length(q5_residuals)
str(q4_residuals); str(q5_residuals)
str(q4_residuals)
str(q5_residuals)
q4_residuals <- as.vector(resid(q4_reg_model))
q5_residuals <- as.vector(resid(q5_reg_model))
str(q4_residuals)
str(q5_residuals)
q5_data <- data.frame(
model = rep(c("q4_reg_model", "q5_reg_model"),
each=length(q4_residuals)),
residuals = c(q4_residuals, q5_residuals)
)
q5_boxplot <- ggplot(q5_data, aes(x=model, y=residuals, fill=model)) +
geom_boxplot()
q5_boxplot
q5_boxplot <- ggplot(q5_data, aes(x=model, y=residuals, fill=model)) +
geom_boxplot(fill=c("#2D9596", "#265073")) +
theme_bw()
q5_boxplot
theme_bw()
q5_boxplot
q5_boxplot <- ggplot(q5_data, aes(x=model, y=residuals, fill=model)) +
geom_boxplot(fill=c("#2D9596", "#265073")) +
ggtitle("Boxplot: Residuals in Question 4 and 5") +
theme_bw()
q5_boxplot
q5_boxplot <- ggplot(q5_data, aes(x=model, y=residuals, fill=model)) +
geom_boxplot(fill=c("#739072", "#4F6F52")) +
ggtitle("Boxplot: Residuals in Question 4 and 5") +
theme_bw()
q5_boxplot
q5_boxplot <- ggplot(q5_data, aes(x=model, y=residuals, fill=model)) +
geom_boxplot(fill=c("#739072", "#ECE3CE")) +
ggtitle("Boxplot: Residuals in Question 4 and 5") +
theme_bw()
q5_boxplot
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("ggplot2"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/incumbents_subset.csv")
####### Question 1 #######
##### (1) #####
q1_reg_model <- lm(voteshare ~ difflog, data=inc.sub)
summary(q1_reg_model)
##### (2) #####
q1_scatter <- ggplot(inc.sub, aes(x=difflog, y=voteshare)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: voteshare and difflog") +
theme_bw()
q1_scatter
##### (3) #####
q1_residuals <- residuals(q1_reg_model)
str(q1_residuals)
summary(q1_residuals)
##### (4) #####
q1_cof_vec <- coef(q1_reg_model)
q1_intercept <- q1_cof_vec[1]
q1_slope <- q1_cof_vec[2]
q1_pre_equation <- paste(
"voteshare =", round(q1_intercept, 2), "+", round(q1_slope, 2), "* difflog")
q1_pre_equation
####### Question 2 #######
##### (1) #####
q2_reg_model <- lm(presvote ~ difflog, data=inc.sub)
summary(q2_reg_model)
##### (2) #####
q2_scatter <- ggplot(inc.sub, aes(x=difflog, y=presvote)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: presvote and difflog") +
theme_bw()
q2_scatter
##### (3) #####
q2_residuals <- residuals(q2_reg_model)
str(q2_residuals)
summary(q2_residuals)
##### (4) #####
q2_cof_vec <- coef(q2_reg_model)
q2_intercept <- q2_cof_vec[1]
q2_slope <- q2_cof_vec[2]
q2_pre_equation <- paste(
"presvote =", round(q2_intercept, 2), "+", round(q2_slope, 2), "* difflog")
q2_pre_equation
####### Question 3 #######
##### (1) #####
q3_reg_model <- lm(voteshare ~ presvote, data=inc.sub)
summary(q3_reg_model)
##### (2) #####
q3_scatter <- ggplot(inc.sub, aes(x=presvote, y=voteshare)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: voteshare and presvote") +
theme_bw()
q3_scatter
##### (3) #####
q3_cof_vec <- coef(q3_reg_model)
q3_intercept <- q3_cof_vec[1]
q3_slope <- q3_cof_vec[2]
q3_pre_equation <- paste(
"voteshare =", round(q3_intercept, 2), "+", round(q3_slope, 2), "* presvote")
q3_pre_equation
####### Question 4 #######
##### (1) #####
q4_reg_model <- lm(q1_residuals ~ q2_residuals, data=inc.sub)
summary(q4_reg_model)
##### (2) #####
q4_scatter <- ggplot(inc.sub, aes(x=q2_residuals, y=q1_residuals)) +
geom_point(shape=1, size=0.8, color="#609966", alpha=0.4) +
geom_smooth(method="lm", se=FALSE, color="#52616B", size=0.5) +
ggtitle("Scatter: q1residuals and q2residuals") +
theme_bw()
q4_scatter
##### (3) #####
q4_cof_vec <- coef(q4_reg_model)
q4_intercept <- q4_cof_vec[1]
q4_slope <- q4_cof_vec[2]
q4_pre_equation <- paste(
"q1_residuals =", round(q4_intercept, 2), "+", round(q4_slope, 2), "* q2_residuals")
q4_pre_equation
####### Question 5 #######
##### (1) #####
q5_reg_model <- lm(voteshare ~ difflog + presvote, data=inc.sub)
summary(q5_reg_model)
##### (2) #####
q5_cof_vec <- coef(q5_reg_model)
q5_intercept <- q5_cof_vec[1]
q5_slope1 <- q5_cof_vec[2]
q5_slope2 <- q5_cof_vec[3]
q5_pre_equation <- paste(
"voteshare =", round(q5_intercept, 2),
"+", round(q5_slope1, 2), "* difflog",
"+", round(q5_slope2, 2), "* presvote")
q5_pre_equation
##### (3) #####
q4_residuals <- as.vector(resid(q4_reg_model))
q5_residuals <- as.vector(resid(q5_reg_model))
str(q4_residuals); str(q5_residuals)
q5_data <- data.frame(
model = rep(c("q4_reg_model", "q5_reg_model"),
each=length(q4_residuals)),
residuals = c(q4_residuals, q5_residuals)
)
q5_boxplot <- ggplot(q5_data, aes(x=model, y=residuals, fill=model)) +
geom_boxplot(fill=c("#739072", "#ECE3CE")) +
ggtitle("Boxplot: Residuals in Question 4 and 5") +
theme_bw()
q5_boxplot
